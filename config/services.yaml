# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices.html#use-parameters-for-application-configuration
parameters:
    images_directory: '%kernel.project_dir%/public/images'
    mailer.sender_email_admin: no-reply@zoo-arcadia.com
    email_from: '%env(EMAIL_FROM)%'
    email_to: '%env(EMAIL_TO)%'

    KT_THEME: 'metronic'

  # Theme layout templates directory

    KT_THEME_LAYOUT_DIR: 'metronic/layout'

  # Theme Mode
  # Value: light | dark | system

    KT_THEME_MODE_DEFAULT: 'light'
    KT_THEME_MODE_SWITCH_ENABLED: true


  # Theme Direction
  # Value: ltr | rtl

    KT_THEME_DIRECTION: 'ltr'


  # Keenicons
  # Value: duotone | outline | bold

    KT_THEME_ICONS: 'duotone'


  # Theme Assets
    KT_THEME_ASSETS.favicon: "media/logos/favicon.ico"
    KT_THEME_ASSETS.fonts: [
      'https://fonts.googleapis.com/css?family=Inter:300,400,500,600,700',
    ]
    KT_THEME_ASSETS.css: [
      "plugins/global/plugins.bundle.css",
      "css/style.bundle.css",
      "css/custom.css"
    ]
    KT_THEME_ASSETS.js: [
      "plugins/global/plugins.bundle.js",
      "js/scripts.bundle.js",
    ]
    KT_THEME_VENDORS:
      "datatables": {
        "css": [
          "plugins/custom/datatables/datatables.bundle.css"
        ],
        "js": [
          "plugins/custom/datatables/datatables.bundle.js"
        ]
      }
    env(MONGODB_URL): ''
    env(MONGODB_DB): ''

services:

    App\Twig\AppExtension:
      arguments:
        $requestStack: '@request_stack'
        $security: '@security.helper'
      tags:
        - { name: twig.extension }

    App\Service\RepositoryHelper:
      arguments:
        $entityManager: '@doctrine.orm.entity_manager'

    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.
        bind:
          $security: '@security.helper'  # Ajoutez cette ligne pour binder le service Security helper

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/'
        exclude:
            - '../src/DependencyInjection/'
            - '../src/Entity/'
            - '../src/Kernel.php'

    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones
    App\EventListener\GlobalBeforeSaveListener:
        tags:
            - name: 'doctrine.event_listener'
              event: 'preUpdate'
              priority: 500
              connection: 'default'
            - name: 'doctrine.event_listener'
              event: 'prePersist'
              priority: 500
              connection: 'default'

    App\EventListener\ImageDeleteListener:
      arguments:
        $imagesDirectory: '%images_directory%'
      tags:
        - { name: 'doctrine.orm.entity_listener', entity: App\Entity\Image, event: postRemove }
    App\Service\EmailService:
      arguments:
        $senderEmailAdmin: '%mailer.sender_email_admin%'